# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-05-01 11:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=255)),
                ('url', models.SlugField(max_length=255)),
                ('content_type', models.CharField(max_length=255)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('data', models.TextField(blank=True, db_column='data')),
            ],
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=256)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mywebmarks.Container')),
                ('user_cre', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='container_user_cre', to=settings.AUTH_USER_MODEL)),
                ('user_upd', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='container_user_upd', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('url', models.CharField(default=None, max_length=2000, null=True)),
                ('add_dt', models.DateTimeField()),
                ('icon', models.CharField(default=None, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileUploader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('type', models.CharField(choices=[('FAVORITE', 'Favorite')], max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('version', models.IntegerField(default=0)),
                ('upload_date', models.DateTimeField(auto_now=True, db_index=True)),
                ('size', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalMedia',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('updated_dt', models.DateTimeField(blank=True, editable=False)),
                ('created_dt', models.DateTimeField(blank=True, editable=False)),
                ('kind', models.CharField(choices=[('NOTE', 'Note'), ('TODO', 'Todo'), ('MAIL', 'Mail'), ('LINK', 'Link')], default='NOTE', max_length=10)),
                ('title', models.CharField(max_length=256)),
                ('url', models.CharField(default=None, max_length=2000, null=True)),
                ('description', models.TextField(blank=True)),
                ('archived_dt', models.DateTimeField(null=True)),
                ('rate', models.IntegerField(default=0)),
                ('favorite', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('V', 'Valid'), ('T', 'Trash')], default='D', max_length=1)),
                ('public', models.BooleanField(default=False)),
                ('schedule_dt', models.DateTimeField(null=True)),
                ('archive_id', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_cre', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_upd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical media',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('kind', models.CharField(choices=[('NOTE', 'Note'), ('TODO', 'Todo'), ('MAIL', 'Mail'), ('LINK', 'Link')], default='NOTE', max_length=10)),
                ('title', models.CharField(max_length=256)),
                ('url', models.CharField(default=None, max_length=2000, null=True)),
                ('description', models.TextField(blank=True)),
                ('archived_dt', models.DateTimeField(null=True)),
                ('rate', models.IntegerField(default=0)),
                ('favorite', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('V', 'Valid'), ('T', 'Trash')], default='D', max_length=1)),
                ('public', models.BooleanField(default=False)),
                ('schedule_dt', models.DateTimeField(null=True)),
                ('archive_id', models.IntegerField(null=True)),
                ('container', models.ManyToManyField(blank=True, related_name='containers', to='mywebmarks.Container')),
            ],
        ),
        migrations.CreateModel(
            name='MediaAttachement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebmarks.Media')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=64, verbose_name='code')),
                ('libelle', models.CharField(max_length=256)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mywebmarks.Model')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('public', models.BooleanField(default=False)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('user_cre', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_user_cre', to=settings.AUTH_USER_MODEL)),
                ('user_upd', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_user_upd', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='search',
            name='tags',
            field=models.ManyToManyField(related_name='tags_search', to='mywebmarks.Tag'),
        ),
        migrations.AddField(
            model_name='search',
            name='user_cre',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='search_user_cre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='search',
            name='user_upd',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='search_user_upd', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='media',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tags', to='mywebmarks.Tag'),
        ),
        migrations.AddField(
            model_name='media',
            name='user_cre',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='media_user_cre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='media',
            name='user_upd',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='media_user_upd', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='archive',
            name='media',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='archives', to='mywebmarks.Media'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('name', 'user_cre')]),
        ),
    ]
