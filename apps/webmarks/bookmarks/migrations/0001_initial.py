# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-04 09:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalBookmark',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('updated_dt', models.DateTimeField(blank=True, editable=False)),
                ('created_dt', models.DateTimeField(blank=True, editable=False)),
                ('kind', models.CharField(choices=[('NOTE', 'Note'), ('TODO', 'Todo'), ('MAIL', 'Mail'), ('LINK', 'Link'), ('FLDR', 'Folder')], default='NOTE', max_length=10)),
                ('archive_id', models.IntegerField(null=True)),
                ('archived_dt', models.DateTimeField(null=True)),
                ('description', models.TextField(blank=True)),
                ('favorite', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('rate', models.IntegerField(default=0)),
                ('schedule_dt', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('V', 'Valid'), ('T', 'Trash')], default='D', max_length=1)),
                ('title', models.CharField(max_length=256)),
                ('url', models.CharField(default=None, max_length=2000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical bookmark',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('kind', models.CharField(choices=[('NOTE', 'Note'), ('TODO', 'Todo'), ('MAIL', 'Mail'), ('LINK', 'Link'), ('FLDR', 'Folder')], default='NOTE', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('public', models.BooleanField(default=False)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('user_cre', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_user_cre', to=settings.AUTH_USER_MODEL)),
                ('user_upd', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_user_upd', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webmarks_bookmarks.Node')),
                ('archive_id', models.IntegerField(null=True)),
                ('archived_dt', models.DateTimeField(null=True)),
                ('description', models.TextField(blank=True)),
                ('favorite', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('rate', models.IntegerField(default=0)),
                ('schedule_dt', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('V', 'Valid'), ('T', 'Trash')], default='D', max_length=1)),
                ('title', models.CharField(max_length=256)),
                ('url', models.CharField(default=None, max_length=2000, null=True)),
            ],
            bases=('webmarks_bookmarks.node',),
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webmarks_bookmarks.Node')),
                ('name', models.CharField(max_length=256)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webmarks_bookmarks.Folder')),
            ],
            options={
                'abstract': False,
            },
            bases=('webmarks_bookmarks.node', models.Model),
        ),
        migrations.AddField(
            model_name='node',
            name='user_cre',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='node_user_cre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='node',
            name='user_upd',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='node_user_upd', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbookmark',
            name='node_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='webmarks_bookmarks.Node'),
        ),
        migrations.AddField(
            model_name='historicalbookmark',
            name='user_cre',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbookmark',
            name='user_upd',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('name', 'user_cre')]),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tags', to='webmarks_bookmarks.Tag'),
        ),
    ]
